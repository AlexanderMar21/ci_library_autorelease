name: Release
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: Dump env
        run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
  release:
    permissions: write-all
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: yarn && yarn build
      - name: setup git config
        run: |
          git config user.name "Autorelease Bot"
          git config user.email "<>"
      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Check for existing tag
        run: echo git rev-parse --tags=v${{ steps.package-version.outputs.current-version }}
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_RELEASE_TOKEN }}
        run: |
          echo "Tag name from GITHUB_REF_NAME: ${{ steps.vars.outputs.tag }}"
          git tag v${{ steps.package-version.outputs.current-version }}
          git push origin v${{ steps.package-version.outputs.current-version }}
      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_RELEASE_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo "Tag name from GITHUB_REF_NAME: ${{ steps.vars.outputs.tag }}"
          gh release create v${{ steps.package-version.outputs.current-version }}
