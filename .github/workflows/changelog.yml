name: Changelog Workflow
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  changelog:
    permissions: write-all
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Package Version
        run: |
          # Get the package version from package.json and save it to an environment variable
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          # Set the environment variable for use in later steps
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
      - name: Do something with package version
        run: |
          echo "The package version is $PACKAGE_VERSION"
      - name: Check for existing tag
        uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with:
          tag: v${{ $PACKAGE_VERSION }}
      - name: Early Exit
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: |
          echo "Not new version found"
          exit 1
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: yarn
      - name: setup git config
        run: |
          git config user.name "Autorelease Bot"
          git config user.email "<>"
      - name: Pubish Release
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_RELEASE_TOKEN }}
        run: |
          yarn changelog
          git add CHANGELOG.md
          git commit -m "chore(pre-release): v${{ steps.package-version.outputs.current-version }} CHANGELOG"
          git push origin HEAD:${{ github.head_ref }} --no-verify
