name: Changelog Workflow
on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  changelog:
    permissions: write-all
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check if PR is approved
        run: |
          APPROVALS=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews?per_page=100 \
            | jq '[ .[] | select(.state == "APPROVED") ] | length')
          if [ "$APPROVALS" -lt 1 ]; then
            echo "PR not approved. Please ensure the PR has at least one approval."
            exit 1
          fi
      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Check if tag exists from package.json version # check if tag from package.json version already exists
        run: |
          # Check if a tag with the current version exists
          if git rev-parse "refs/tags/v${ steps.package-version.outputs.current-version }" >/dev/null 2>&1; then
            echo "The tag with the version v$VERSION already exists"
            exit 1
          else
            # If no tag exists
            echo "The tag does not exist"
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn
      - name: setup git config
        run: |
          git config user.name "Autorelease Bot"
          git config user.email "<>"
      - name: Create Changelog
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_RELEASE_TOKEN }}
        run: |
          VERSION=$PACKAGE_VERSION
          echo "Package version is $VERSION"
          yarn changelog
          git add CHANGELOG.md
          git commit -m "chore(pre-release): v$VERSION CHANGELOG"
          git push origin HEAD:${{ github.head_ref }} --no-verify
