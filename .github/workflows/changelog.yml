name: Changelog Workflow
on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  changelog:
    permissions: write-all
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check if PR is approved
        uses: marocchino/pull-request-approvals@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.number }}
          minimum-approvals: 1 # Set the required number of approvals
        id: check_approvals
      - name: Exit on not approved PR
        if: steps.check_approvals.outputs.approved == 'false'
        run: |
          echo "PR is not approved. Exiting..."
          exit 1
      - name: Check if tag exists from package.json version # check if tag from package.json version already exists
        run: |
          # Get the package version from package.json
          PACKAGE_VERSION=$(jq -r '.version' package.json)

          # Check if a tag with the current version exists
          if git rev-parse "refs/tags/v${PACKAGE_VERSION}" >/dev/null 2>&1; then
            echo "The tag with the version v$PACKAGE_VERSION already exists"
            exit 1
          else
            # If no tag exists
            echo "The tag does not exist"
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn
      - name: setup git config
        run: |
          git config user.name "Autorelease Bot"
          git config user.email "<>"
      - name: Pubish Release
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_RELEASE_TOKEN }}
        run: |
          yarn changelog
          git add CHANGELOG.md
          git commit -m "chore(pre-release): v${{ steps.package-version.outputs.current-version }} CHANGELOG"
          git push origin HEAD:${{ github.head_ref }} --no-verify
