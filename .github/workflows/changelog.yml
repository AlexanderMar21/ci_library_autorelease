name: Changelog Workflow
on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  changelog:
    permissions: write-all
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check if PR is approved
        run: |
          # Get the PR status from the API response
          PR_STATUS=$(echo "${{ steps.pr-info.outputs.comments }}" | jq -r '.[].state')

          # Check if the PR is approved
          if echo "$PR_STATUS" | grep -q "APPROVED"; then
            # If the PR is approved, save the boolean value "true" to an environment variable
            echo "PR_APPROVED=true" >> $GITHUB_ENV
          else
            # If the PR is not approved, exit with code 1
            echo "The pull request is not approved yet."
            exit 1
          fi
      - name: Check if tag exists from package.json version
        run: |
          # Get the package version from package.json
          PACKAGE_VERSION=$(jq -r '.version' package.json)

          # Check if a tag with the current version exists
          if git rev-parse "refs/tags/v${PACKAGE_VERSION}" >/dev/null 2>&1; then
            # If a tag exists, save the boolean value "true" to an environment variable
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            # If no tag exists, save the boolean value "false" to an environment variable
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Early Exit
        if: ${{ env.TAG_EXISTS == 'true' }}
        run: |
          echo "The tag with the version already exists"
          exit 1
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: yarn
      - name: setup git config
        run: |
          git config user.name "Autorelease Bot"
          git config user.email "<>"
      - name: Pubish Release
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_RELEASE_TOKEN }}
        run: |
          yarn changelog
          git add CHANGELOG.md
          git commit -m "chore(pre-release): v${{ steps.package-version.outputs.current-version }} CHANGELOG"
          git push origin HEAD:${{ github.head_ref }} --no-verify
